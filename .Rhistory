gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
stringsAsFactors = default.stringsAsFactors(),
skip = 4)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- subset(gdpdata, gdpdata$X.1 != "<NA>")
nrows(gdpdata)
nrow(gdpdata)
head(gdpdata)
str(gdpdata)
gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
stringsAsFactors = default.stringsAsFactors(),
skip = 4)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- subset(gdpdata, gdpdata$X.1 != "<NA>")
##gdpdata <- na.omit(gdpdata)
##names(gdpdata)[names(gdpdata) == "Gross.domestic.product.2012"] <- "Rank"
gdpdata$X.1 <- as.numeric(gdpdata$X.1)
##names(gdpdata)[names(gdpdata) == "X.3"] <- "GDP"
##gdpdata$GDP <- as.numeric(gdpdata$GDP)
gdpdata$CountryMatch <- match(gdpdata$X, edudata$CountryCode, nomatch = 0)
nrow(gdpdata)
gdpdata <- subset(gdpdata, gdpdata$CountryMatch != 0)
nrow(gdpdata)
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
nrow(gdpdata)
source('~/R/Code/getdata_Q3.R')
nrow(gdpdata)
source('~/R/Code/getdata_Q3.R')
nrow(gdpdata)
head(gdpdata)
source('~/R/Code/getdata_Q3.R')
gdpdata <- subset(gdpdata, gdpdata$CountryMatch != 0)
nrow(gdpdata)
gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
stringsAsFactors = default.stringsAsFactors(),
skip = 0)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- subset(gdpdata, gdpdata$X.1 != "<NA>")
##gdpdata <- na.omit(gdpdata)
##names(gdpdata)[names(gdpdata) == "Gross.domestic.product.2012"] <- "Rank"
gdpdata$X.1 <- as.numeric(gdpdata$X.1)
##names(gdpdata)[names(gdpdata) == "X.3"] <- "GDP"
##gdpdata$GDP <- as.numeric(gdpdata$GDP)
gdpdata$CountryMatch <- match(gdpdata$X, edudata$CountryCode, nomatch = 0)
gdpdata <- subset(gdpdata, gdpdata$CountryMatch != 0)
nrow(gdpdata)
gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
stringsAsFactors = default.stringsAsFactors(),
skip = 4)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- subset(gdpdata, gdpdata$X.1 != "<NA>")
##gdpdata <- na.omit(gdpdata)
##names(gdpdata)[names(gdpdata) == "Gross.domestic.product.2012"] <- "Rank"
gdpdata$X.1 <- as.numeric(gdpdata$X.1)
##names(gdpdata)[names(gdpdata) == "X.3"] <- "GDP"
##gdpdata$GDP <- as.numeric(gdpdata$GDP)
gdpdata$CountryMatch <- match(gdpdata$X, edudata$CountryCode, nomatch = 0)
gdpdata <- subset(gdpdata, gdpdata$CountryMatch != 0)
head(gdpdata)
nrow(gdpdata)
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
gdpdata(tail)
tail(gdpdata)
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
nrow(gdpdata)
source('~/R/Code/getdata_Q3.R')
table(gdpdata$CountryMatch)
gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
skip = 4)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- subset(gdpdata, gdpdata$X.1 != "<NA>")
##gdpdata <- na.omit(gdpdata)
##names(gdpdata)[names(gdpdata) == "Gross.dome
nrow(gdpdata)
gdpdata$X.1 <- as.numeric(gdpdata$X.1)
##names(gdpdata)[names(gdpdata) == "X.3"] <- "GDP"
##gdpdata$GDP <- as.numeric(gdpdata$GDP)
gdpdata$CountryMatch <- match(gdpdata$X, edudata$CountryCode, nomatch = 0)
table(gdpdata$CountryMatch)
gdpdata[which(gdpdata$CountryMatch == 0), ]
gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
skip = 4)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- subset(gdpdata, gdpdata$X != "<NA>")
##gdpdata <- na.omit(gdpdata)
##names(gdpdata)[names(gdpdata) == "Gross.domestic.product.2012"] <- "Rank"
gdpdata$X.1 <- as.numeric(gdpdata$X.1)
##names(gdpdata)[names(gdpdata) == "X.3"] <- "GDP"
##gdpdata$GDP <- as.numeric(gdpdata$GDP)
gdpdata$CountryMatch <- match(gdpdata$X, edudata$CountryCode, nomatch = 0
)
gdpdata[which(gdpdata$CountryMatch == 0), ]
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
tail(gdpdata)
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
nrow(gdpdata)
tail(gdpdata)
gdpdata <- read.csv("./gdpdata.csv", na.strings = "",
skip = 4)
edudata <- read.csv("./educationdata.csv")
gdpdata$idx <- seq(along = gdpdata$X.4)
gdpdata <- gdpdata[which(gdpdata$X.1 != "<NA>"), ]
##gdpdata <- na.omit(gdpdata)
##names(gdpdata)[names(gdpdata) == "Gross.domestic.product.2012"] <- "Rank"
gdpdata$X.1 <- as.numeric(as.character(gdpdata$X.1))
gdpdata[which(gdpdata$X.1 == NA), ]
head(gdpdata)
tail(gdpdata)
source('~/R/Code/getdata_Q3.R')
head(gdpdata, 13)
source('~/R/Code/getdata_Q3.R')
head(gdpdata)
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
head(gdpdata)
head(gdpdata,13)
nrow(gdpdata)
str(edudata)
str(edudata$IncomeGroup)
str(edudata)
str(edudata$Income.Group)
source('~/R/Code/getdata_Q3.R')
str(MergeData)
MergeData[which(MergeData$Income.Group == "High Income: OECD"),]
MergeData1 <- MergeData[which(MergeData$Income.Group == "High Income: OECD"),]
mean(MergeData1$X.1)
head(MergeData1)
source('~/R/Code/getdata_Q3.R')
MergeData1 <- MergeData[which(MergeData$Income.Group == "High Income: OECD"),]
head(MergeData1)
MergeData1 <- MergeData[which(MergeData$Income.Group == "High income: OECD"),]
head(MergeData1)
mean(MergeData1$X.1)
MergeData2 <- MergeData[which(MergeData$Income.Group == "High income: nonOECD"),]
mean(MergeData2$X.1)
str(MergeData2)
head(MergeData2)
mean(MergeData2$X.1)
head(MergeData2)
head(MergeData2$X.1)
mean(MergeData2$X.1, na.rm = T)
?cut
cut(gdpdata$X.1)
cut(gdpdata$X.1, breaks = quantile(gdpdata$X.1))
table(gdpdata$X.1, gdpdata$Income.Group)
table(gdpdata, gdpdata$Income.Group)
cut(gdpdata, breaks = quantile(gdpdata$X.1))
RankCut <- cut(gdpdata, breaks = quantile(gdpdata$X.1))
RankCut <- cut(gdpdata$X.1, breaks = quantile(gdpdata$X.1))
table(RankCut, gdpdata$Income.Group)
xtabs(RankCut~gdpdata$Income.Group)
str(gdpdata$Income.Group)
str(gdpdata$Income.group)
str(gdpdata)
xtabs(RankCut~MergeData$Income.Group)
nrow(RankCut)
RankCut <- cut(MergeData$X.1, breaks = quantile(MergeData$X.1))
RankCut <- cut(MergeData$X.1, breaks = quantile(MergeData$X.1), na.rm = T)
RankCut <- cut(MergeData$X.1, breaks = quantile(MergeData$X.1), na.rm = "TRUE")
RankCut <- cut(MergeData$X.1, breaks = quantile(MergeData$X.1))
nrows(MergeData)
nrow(MergeData)
str(MergeData)
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
source('~/R/Code/getdata_Q3.R')
str(MergeData)
source('~/R/Code/getdata_Q3.R')
str(MergeData)
RankCut <- cut(MergeData$X1, breaks = quantile(MergeData$X1))
RankCut <- cut(MergeData$X.1, breaks = quantile(MergeData$X.1))
source('~/R/Code/getdata_Q3.R')
RankCut <- cut(MergeData$X.1, breaks = quantile(MergeData$X.1))
str(RankCut)
xtab(RankCut, MergeData$Income.Group)
xtabs(RankCut, MergeData$Income.Group)
xtabs(RankCut~MergeData$Income.Group)
?xtabs
str(MergeData)
>apply
?apply
apply(MergeData, 2, quantile(MergeData$X.1))
sapply(MergeData, 2, quantile(MergeData$X.1))
?sapply
sapply(MergeData, quantile(MergeData$X.1))
sapply(MergeData, quantile)
sapply(MergeData$X.1, quantile)
temp <- sapply(MergeData$X.1, quantile)
nrow(temp)
ncol(temp)
quantime(MergeData$X.1)
quantile(MergeData$X.1)
Q <- quantile(MergeData$X.1)
xtabs(Q~Income.Group, data = MergeData)
summary(MergeData)
Top <- MergeData[which(MergeData$X.1<= 38),]
summary(Top)
source('~/R/Code/getdata_Q3.R')
setwd("./GetData_Project/GetData_CourseProject")
getwd()
ls()
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
path
path_test
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
labels_test
str(labels_test)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(data_test)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(activity_labels)
head(activity_labels)
head(data_test)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(feature_labels)
head(feature_labels)
nrow(feature_labels)
nrow(data_test_)
nrow(data_test)
ncol(data_test)
data_test[1,1:10]
data_test[1,1:5
]
dim(data_test)
dim(activity_labels)
dim(feature_labeles)
dim(feature_labels)
?rep
mycols <-rep("NULL", 28)
mycols
mycols[c(1,5,28)] <- NA
mycols
?read.table
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
dim(data_test)
dim(labels_test)
dim(feature_labels)
head(data_test_)
head(data_test)
data_test$activity <- labels_test
dim(data_test)
str(data_test)
head(data_test)
data_test[1,V1]
data_test[1,562]
data_test <- cbind(data_test, labels_test)
dim(data_test)
head(data_test)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
head(data_test)
data_test[1,1]
data_test[1,1:10]
dim(feature_labels)
head(feature_labels)
grep("mean", feature_labels$V2)
col1 <- grep("mean", feature_labels$V2)
col2 <- grep("std", feature_labels$V2)
rbind(col1, col2)
dim(col1)
col1
col2
cols <- c(col1, col2)
cols
order(cols)
?order)
?order
cols
sort(cols)
feature_labels$v2[cols]
feature_labels$v2(cols)
feature_labels[cols,]
length(feature_labels)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
col_list
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
col_names
head(labels_test)
head(activity_labels)
col_names <- c(col_names, "ActivityID", "SubjectID")
col_names
head(col_names)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
cols_names
col_names
dim(col_names)
nrow(col_names)
length(col_names)
col_names <- c(col_names, "ActivityID", "StudentID")
col_names
col_names <- feature_labels[cols,2]
col_names
col_names <- rbind(col_names, c("ActivityID", "StudentID"))
str(col_names)
dim(data_test)
col_names(1)
col_names[1]
col_names[1,]
col_names[,1]
feature_labels[cols,]
col_names <- feature_labels[cols, feature_lables$V2]
col_names <- feature_labels[cols, feature_labels$V2]
col_names <- feature_labels[cols,]
col_names
col_names <- col_names$V2
col_names
col_names <- c(col_names$V2, "ActivityID", "StudentID")
col_names <- feature_labels[cols,]
col_names <- c(col_names$V2, "ActivityID", "StudentID")
col_names
col_names <- feature_labels[cols,]
col_names <- col_names$V2
col_names
names(data_test) <- col_names
str(data_test)
names(data_test) <- c(col_names, "ActivityID", "StudentID")
str(data_test)
names(data_test) <- col_names
col_names
col_names <- as.character(col_names)
col_names
col_names <- rbind(col_names, "acitivityID")
col_names
col_names <- feature_labels[cols,]
col_names <- as.character(feature_labels[cols,])
col_names
col_names <- feature_labels[cols,]
col_names
col_names<-as.character(col_names)
col_names
col_names <- feature_labels[cols,]
col_names<-as.character(col_names$V2)
col_names
col_names <- c(col_names, "activityid")
col_names
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(data_test)
library(plyr)
?revalue
data_test$ActivityID <- as.character(data_test$ActivityID)
str(data_test)
data_test$ActivityID <- revalue(data_test$ActivityID, c("5" = "STANDING"))
str(data_test)
activity_labels
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(data_test)
tail(data_test)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(data_train)
dim(data_train)
dim(data_test)
rbind(data_test, data_train)
data <- rbind(data_test, data_train)
dim(data)
str(data)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
avg1 <- data[,mean(tBodyAcc-mean()-X), by = "SubjectID"]
data1 <- data.table(data)
??data.table
library(data.table)
data1 <- data.table(data)
avg1 <- data[,mean(tBodyAcc-mean()-X), by = "SubjectID"]
avg1 <- data1[,mean(tBodyAcc-mean()-X), by = "SubjectID"]
avg1 <- data1[,mean(data1$V1, by = "SubjectID"]
str(data1)
data1$V1
data1$tBodyAcc-mean()-X
data1$"tBodyAcc-mean()-X"
avg1 <- data1[,mean("tBodyAcc-mean()-X"), by = "SubjectID"]
str(avg1)
avg1 <- data1[,mean("tBodyAcc-mean()-X", na.rm = T), by = "SubjectID"]
str(avg1)
str(data1)
?summarise
summarise(data)
summarise(data,...)
?dplyr
?summarise_each
?group_by
summary(data)
?ddply
ddply(data, .(SubjectID), summarize)
?melt
avg1 <- ddply(data, c("SubjectID"), summarize, Avg = ave("tBodyAcc-mean()-X"))
avg1
warnings()
data$"tBodyAcc-mean()-X" <- as.numeric(data$"tBodyAcc-mean()-X")
avg1 <- ddply(data, c("SubjectID"), summarize, Avg = ave("tBodyAcc-mean()-X"))
avg1
str(data)
library(sqldf)
sqldf("select * from data limit 5")
sqldf("select SubjectID, ActivityID, avg("tBodyAcc-mean()-X") from data ")
sqldf("select SubjectID, ActivityID, AVG("tBodyAcc-mean()-X") from data")
sqldf("select SubjectID, ActivityID, AVG("tBodyAcc-mean()-X") from data group by SubjectID, ActivityID")
sqldf("select SubjectID, ActivityID, AVG(data$"tBodyAcc-mean()-X") from data group by SubjectID, ActivityID")
col_names
substr(col_names[1])
substr(col_names[1], 1)
grep("-", col_names)
col_names <- gsub("-", "_", col_names)
col_names
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
sqldf("select SubjectID, ActivityID, AVG(tBodyAcc_mean()_X) from data group by SubjectID, ActivityID")
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
col_names
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
col_names
col_names <- gsub("()", "_", col_names)
col_names
?regexp
test <- "a()b"
test
gsub("()", "-", test)
gsub('()', "-", test)
gsub("'()'", "-", test)
gsub("(", "-", test)
gsub("'(", "-", test)
strsplit(test, "(")
strsplit(test, "()")
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
col_names
sqldf("select SubjectID, ActivityID, AVG(tBodyAcc_mean__X) from data group by SubjectID, ActivityID")
paste("AVG" colname[1])
paste("AVG", colname[1])
paste("AVG", col_names[1])
paste("AVG(",col_names[1])
paste("AVG(",col_names[1], ")"")
paste("AVG(",col_names[1],")")
test <- paste("AVG(",col_names[1],")")
sqldf(paste("select SubjectID, ActivityID, ", test," from data group by SubjectID, ActivityID")
)
sqldf(paste("select SubjectID, ActivityID, ", test," from data group by SubjectID, ActivityID"))
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
SQLstr
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
Result
Result <- cbind(Result, Result[,3])
Result
nrow(col_names)
length(col_names)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(Result)
names(temp[,3]) <- col_str
temp
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(Result)
temp
cbind(Result, temp[,3])
for (i in 2:(length(col_names)-2)){
##create the col str
col_str[i] <- paste("AVG(", col_names[i], ")")
}
col_str
names(Result[,4:ncol(Results)]) <- col_str
names(Results[,4:ncol(Results)]) <- col_str
names(Result[,4:ncol(Result)]) <- col_str
length(col_str)
ncol(Result)
## create the header names
for (i in 1:(length(col_names)-2)){
##create the col str
col_str[i] <- paste("AVG(", col_names[i], ")")
}
col_str
names(Result[,2:ncol(Result)]) <- col_str
str(Result)
names(Result[,3:ncol(Result)]) <- col_str
str(Result)
ncol(Result)
col_str <- c("SubjectID", "ActivityID", col_str)
col_str
names(Result) <- col_str
str(Result)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
str(Result)
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
?write.table
source('~/R/Code/GetData_Project/GetData_CourseProject/run_analysis.R')
dim(Result)
str(Results)
str(Result)
col_str
